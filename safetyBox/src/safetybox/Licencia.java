/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package safetybox;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author sam-y
 */
public class Licencia extends javax.swing.JFrame {

    /**
     * Creates new form Licencia
     */
    public Licencia() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tu prueba gratis está por terminar, ingresa tu licencia por favor. ");

        jButton1.setText("Seleccionar Archivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Continuar sin Licencia");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(72, 72, 72)
                        .addComponent(jButton2))
                    .addComponent(jLabel1))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
        new calculadora().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser seleccionado = new JFileChooser();
        if (seleccionado.showDialog(null, "Abrir archivo") == JFileChooser.APPROVE_OPTION) {
            if (seleccionado.getSelectedFile().getName().endsWith(".docx") || seleccionado.getSelectedFile().getName().endsWith(".pdf") || seleccionado.getSelectedFile().getName().endsWith(".txt") || seleccionado.getSelectedFile().getName().endsWith(".xlsx") || seleccionado.getSelectedFile().getName().endsWith(".png") || seleccionado.getSelectedFile().getName().endsWith(".jpg") || seleccionado.getSelectedFile().getName().endsWith(".DOCX") || seleccionado.getSelectedFile().getName().endsWith(".PDF") || seleccionado.getSelectedFile().getName().endsWith(".TXT") || seleccionado.getSelectedFile().getName().endsWith(".XLSX") || seleccionado.getSelectedFile().getName().endsWith(".PNG") || seleccionado.getSelectedFile().getName().endsWith(".JPG")) {
                ArrayList<File> archivos = new ArrayList<File>();
                archivos.add(new File("comparar.docx"));
                archivos.add(new File("comparar.xlsx"));
                archivos.add(new File("comparar.txt"));
                archivos.add(new File("comparar.png"));
                archivos.add(new File("comparar.pdf"));
                archivos.add(new File("comparar.jpg"));
                int posicion = -1;
                for (int i = 0; i < archivos.size(); i++) {
                    if (archivos.get(i).exists()) {
                        posicion = i;
                    }
                }
                if (posicion != -1) {
                    String cadena, total = null;
                    FileReader f;
                    try {
                        f = new FileReader(archivos.get(posicion));
                        BufferedReader b = new BufferedReader(f);
                        while ((cadena = b.readLine()) != null) {
                            total += cadena;
                        }
                        b.close();
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(Licencia.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(Licencia.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    String cadena2, total2 = null;
                    FileReader ff;
                    try {
                        ff = new FileReader(seleccionado.getSelectedFile());
                        BufferedReader b2 = new BufferedReader(ff);
                        while ((cadena2 = b2.readLine()) != null) {
                            total2 += cadena2;
                        }
                        b2.close();
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(Licencia.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(Licencia.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (total.equals(total2)) {
                        //son iguales 
                        dispose();
                        new Administrador_archivos().setVisible(true);
                    } else {
                        //archivos distintos
                        JOptionPane.showMessageDialog(null, "Licencia inválida");

                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingresa un archivo con uno de lo sig. formatos: .docx, .xlsx, .txt, .png, .pdf, .jpg");
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Licencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Licencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Licencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Licencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Licencia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
